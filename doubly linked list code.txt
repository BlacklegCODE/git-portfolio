//doubly linked list code
#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node
struct Node {
    int data;
    struct Node* prev;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->prev = NULL;
    newNode->next = NULL;
    return newNode;
}

// Insert node at the end
void insertEnd(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL)
        temp = temp->next;
    temp->next = newNode;
    newNode->prev = temp;
}

// Delete a node by value
void deleteNode(struct Node** head, int value) {
    struct Node* temp = *head;

    // Find the node to delete
    while (temp != NULL && temp->data != value)
        temp = temp->next;

    // If not found, return
    if (temp == NULL) return;

    // If node is head
    if (temp == *head)
        *head = temp->next;

    // Adjust the links
    if (temp->next != NULL)
        temp->next->prev = temp->prev;
    if (temp->prev != NULL)
        temp->prev->next = temp->next;

    free(temp);
}

// Reverse the list
void reverseList(struct Node** head) {
    struct Node *temp = NULL, *current = *head;

    while (current != NULL) {
        temp = current->prev;
        current->prev = current->next;
        current->next = temp;
        current = current->prev;
    }

    if (temp != NULL)
        *head = temp->prev;
}

// Display the list
void display(struct Node* head) {
    struct Node* temp = head;
    printf("Doubly Linked List: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    struct Node* head = NULL;
    int n, value, choice;

    // Accepting number of nodes from user
    printf("Enter number of nodes: ");
    scanf("%d", &n);

    // Accepting values for the nodes
    for (int i = 0; i < n; i++) {
        printf("Enter value for node %d: ", i + 1);
        scanf("%d", &value);
        insertEnd(&head, value);
    }

    display(head);

    // Simple menu for operations
    printf("1. Delete a node\n2. Reverse the list\nEnter choice: ");
    scanf("%d", &choice);

    if (choice == 1) {
        printf("Enter value to delete: ");
        scanf("%d", &value);
        deleteNode(&head, value);
        display(head);
    } else if (choice == 2) {
        reverseList(&head);
        printf("Reversed list:\n");
        display(head);
    }

    return 0;
}